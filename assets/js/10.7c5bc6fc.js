(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{343:function(s,t,e){s.exports=e.p+"assets/img/vscode-nodejs-auto-attach.fbc32b64.png"},344:function(s,t,e){s.exports=e.p+"assets/img/vscode-nodejs-auto-smart.c600e08c.png"},345:function(s,t,e){s.exports=e.p+"assets/img/vscode-nodejs-debug-terminal.a371560e.png"},346:function(s,t,e){s.exports=e.p+"assets/img/vscode-nodejs-npm-script-debug.03a3e057.png"},347:function(s,t,e){s.exports=e.p+"assets/img/vscode-nodejs-attach-progress.10fab59f.png"},348:function(s,t,e){s.exports=e.p+"assets/img/vscode-nodejs-launch-config.f8b83ce3.png"},349:function(s,t,e){s.exports=e.p+"assets/img/vscode-nodejs-external-terminal.f1bc59b4.png"},350:function(s,t,e){s.exports=e.p+"assets/img/vscode-nodejs-console.16e3bd09.png"},532:function(s,t,e){"use strict";e.r(t);var a=e(4),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"vs-code-调试-node-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vs-code-调试-node-js"}},[s._v("#")]),s._v(" VS Code 调试 Node.js")]),s._v(" "),a("p",[s._v("在上一篇文章  "),a("RouterLink",{attrs:{to:"/2024/09/17/nodejs-api/#vs-code-调试-node-js"}},[s._v("创建 Node.js 服务")]),s._v(" 中，我们简单介绍了 VS Code 调试 Node.js。但是有一个问题，如果在调试过程中发现了问题，随即修改代码，但是服务没有自动重启，而是需要我们手动刷新。如果我们一时忘记了刷新，调试时发现问题依然存在，而我们觉得已经改了代码，问题不应该存在，给我们带来了困惑。这篇文章我们将详细介绍 VS Code 调试 Node.js 的四种方法，并且解决修改代码没有重启服务的问题。")],1),s._v(" "),a("p",[s._v("正如上一篇文章 "),a("RouterLink",{attrs:{to:"/2024/09/17/nodejs-api/#vs-code-调试-node-js"}},[s._v("创建 Node.js 服务")]),s._v(" 中说的，VS Code 调试 Node.js 有四种方法：")],1),s._v(" "),a("ul",[a("li",[s._v("使用 "),a("a",{attrs:{href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach",target:"_blank",rel:"noopener noreferrer"}},[s._v("自动附加 "),a("OutboundLink")],1),s._v("调试您在 VS Code 的集成终端中运行的进程。")]),s._v(" "),a("li",[s._v("使用 "),a("a",{attrs:{href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_javascript-debug-terminal",target:"_blank",rel:"noopener noreferrer"}},[s._v("JavaScript 调试终端"),a("OutboundLink")],1),s._v(" 调试程序。")]),s._v(" "),a("li",[s._v("附加到在 VS Code 外部启动的 "),a("a",{attrs:{href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_attaching-to-nodejs",target:"_blank",rel:"noopener noreferrer"}},[s._v("进程"),a("OutboundLink")],1),s._v("。")]),s._v(" "),a("li",[s._v("使用 "),a("a",{attrs:{href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_launch-configuration",target:"_blank",rel:"noopener noreferrer"}},[s._v("启动配置 "),a("OutboundLink")],1),s._v("启动程序。")])]),s._v(" "),a("p",[s._v("同时我们知道，使用 "),a("a",{attrs:{href:"https://github.com/remy/nodemon",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("nodemon")]),a("OutboundLink")],1),s._v(" 命令行工具，可以在修改代码之后自动重启服务。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ nodemon index.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("接下来我们研究怎么将 "),a("a",{attrs:{href:"https://github.com/remy/nodemon",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("nodemon")]),a("OutboundLink")],1),s._v(" 工具与 VS Code 调试方式结合起来，实现既能使用 VS Code 调试，又能修改代码之后重启服务，并且可以继续调试。")]),s._v(" "),a("h2",{attrs:{id:"自动附加"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动附加"}},[s._v("#")]),s._v(" 自动附加")]),s._v(" "),a("p",[s._v("自动附加功能让 Node 调试器自动附加到从 VS Code 集成终端启动的 Node.js 进程。通过在命令面板（⇧⌘P）中的 "),a("code",[s._v("Debug: Toggle Auto Attach")]),s._v(" 命令，启动自动附加功能。")]),s._v(" "),a("p",[s._v("自动附加有三种模式:")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("always")]),s._v("：将调试在 VS Code 集成终端中启动的所有 Node.js 进程")]),s._v(" "),a("li",[a("code",[s._v("onlyWithFlag")]),s._v("：将仅调试使用 "),a("code",[s._v("--inspect")]),s._v(" 或 "),a("code",[s._v("--inspect-brk")]),s._v(" 标志启动的进程。")]),s._v(" "),a("li",[a("code",[s._v("smart")]),s._v("：将调试 "),a("code",[s._v("node_modules")]),s._v(" 文件夹未包含的脚本或使用常见的 “运行程序” 脚本（如 "),a("code",[s._v("mocha")]),s._v(" 或 "),a("code",[s._v("ts-node")]),s._v("）")])]),s._v(" "),a("p",[a("img",{attrs:{src:e(343),alt:""}})]),s._v(" "),a("p",[s._v("开启自动附加功能之后，可以通过 VS Code 窗口底部的 "),a("code",[s._v("Auto Attach")]),s._v(" 状态栏切换模式。"),a("strong",[s._v("启动自动附加功能或者切换模式之后，需要重新创建一个新终端，然后运行程序")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"always"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#always"}},[s._v("#")]),s._v(" "),a("code",[s._v("always")])]),s._v(" "),a("p",[s._v("首先我们来看看 "),a("code",[s._v("always")]),s._v("，当选择这个选项时，只要我们在 VS Code 集成终端运行 Node.js 程序（无论是在终端命令行里运行还是通过 "),a("code",[s._v("NPM Script")]),s._v(" 运行，但是不能在别的终端应用运行），VS Code 就打开了调试。")]),s._v(" "),a("p",[s._v("所以我们可以在 VS Code 集成终端运行 "),a("code",[s._v("nodemon")]),s._v(" 命令")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ nodemon index.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("或者在 "),a("code",[s._v("package.json")]),s._v(" 里添加脚本命令，然后运行")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nodemon index.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("这样就实现了既打开了 VS Code 调试，又在修改代码之后重启服务。但是 "),a("code",[s._v("always")]),s._v(" 模式有个缺陷：因为自动附加功能作用于全局，开启 "),a("code",[s._v("always")]),s._v(" 模式之后，所有的项目只要通过 VS Code 集成终端运行，都会打开调试，这对于一些 web 前端项目是没有必要的。")]),s._v(" "),a("h3",{attrs:{id:"onlywithflag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#onlywithflag"}},[s._v("#")]),s._v(" "),a("code",[s._v("onlyWithFlag")])]),s._v(" "),a("p",[a("code",[s._v("onlyWithFlag")]),s._v(" 仅调试使用 "),a("code",[s._v("--inspect")]),s._v(" 或 "),a("code",[s._v("--inspect-brk")]),s._v(" 标志启动的进程，所以我们可以使用 "),a("code",[s._v("--inspect")]),s._v(" 选项在 VS Code 集成终端运行 Node.js 程序。")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ node --inspect index.js\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n$ nodemon --inspect index.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("通过 "),a("code",[s._v("nodemon --inspect index.js")]),s._v("，实现了既使用了 VS Code 调试，又在修改代码之后重启服务，同时避免 web 前端项目自动开启调试。")]),s._v(" "),a("p",[s._v("注意，"),a("code",[s._v("onlyWithFlag")]),s._v(" 模式同样要求在 VS Code 集成终端运行，在别的终端应用运行无效。")]),s._v(" "),a("h3",{attrs:{id:"smart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#smart"}},[s._v("#")]),s._v(" "),a("code",[s._v("smart")])]),s._v(" "),a("p",[a("code",[s._v("smart")]),s._v("：将调试 "),a("code",[s._v("node_modules")]),s._v(" 文件夹未包含的脚本或使用常见的 “运行程序” 脚本（如 "),a("code",[s._v("mocha")]),s._v(" 或 "),a("code",[s._v("ts-node")]),s._v("），可以通过 "),a("code",[s._v("Auto Attach Smart Pattern")]),s._v(" （"),a("code",[s._v("debug.javascript.autoAttachSmartPattern")]),s._v("） 配置 “运行程序” 脚本允许列表")]),s._v(" "),a("p",[a("img",{attrs:{src:e(344),alt:""}})]),s._v(" "),a("p",[s._v("因为 "),a("code",[s._v("node")]),s._v(" 和 "),a("code",[s._v("nodemon")]),s._v(" 命令都不在 "),a("code",[s._v("node_modules")]),s._v(" 文件夹里，所以也能实现打开 VS Code 调试，同时修改代码之后重启服务。对于 web 前端项目，如果使用了 "),a("code",[s._v("node_modules")]),s._v(" 文件夹里的脚本，比如 "),a("code",[s._v("umijs")]),s._v(" 的 "),a("code",[s._v("max")]),s._v(" 命令，"),a("code",[s._v("CRA")]),s._v(" 的 "),a("code",[s._v("react-scripts")]),s._v(" 命令，就不会开启调试，如果没有使用，比如 "),a("code",[s._v("CRA")]),s._v(" "),a("code",[s._v("eject")]),s._v(" 之后的 "),a("code",[s._v("node scripts/start.js")]),s._v(" 就会打开调试。")]),s._v(" "),a("p",[s._v("注意，"),a("code",[s._v("smart")]),s._v(" 模式同样要求在 VS Code 集成终端运行，在别的终端应用运行无效。")]),s._v(" "),a("h2",{attrs:{id:"javascript-调试终端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-调试终端"}},[s._v("#")]),s._v(" JavaScript 调试终端")]),s._v(" "),a("p",[s._v("JavaScript 调试终端将自动调试您在其中运行的任何 Node.js 进程，无论是否使用了 "),a("code",[s._v("--inspect")]),s._v(" 或 "),a("code",[s._v("--inspect-brk")]),s._v(" 选项。")]),s._v(" "),a("p",[s._v("创建 JavaScript 调试终端有下面两个方法：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("命令面板（⇧⌘P）中的 "),a("code",[s._v("Debug: JavaScript Debug Terminal")]),s._v(" 命令")])]),s._v(" "),a("li",[a("p",[s._v("在 VS Code 终端界面创建一个 JavaScript 调试终端")]),s._v(" "),a("p",[a("img",{attrs:{src:e(345),alt:""}})])])]),s._v(" "),a("p",[s._v("然后，我们在 JavaScript 调试终端里运行 "),a("code",[s._v("nodemon")]),s._v("，实现 VS Code 调试，同时修改代码之后重启服务")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ nodemon index.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("除此之外，通过 NPM Script 面板，也能创建 JavaScript 调试终端，并调试 Node.js 程序")]),s._v(" "),a("p",[a("img",{attrs:{src:e(346),alt:""}})]),s._v(" "),a("p",[s._v("因此我们可以在 "),a("code",[s._v("package.json")]),s._v(" 里创建 "),a("code",[s._v("nodemon")]),s._v(" 脚本命令")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nodemon index.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("通过 NPM Script 面板，调试 "),a("code",[s._v("dev")]),s._v(" 命令，实现 VS Code 调试，同时修改代码之后重启服务")]),s._v(" "),a("h2",{attrs:{id:"附加到-node-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附加到-node-js"}},[s._v("#")]),s._v(" 附加到 Node.js")]),s._v(" "),a("p",[s._v("如果您在别的终端应用（比如 iTerm）里运行 Node.js 程序")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ node --inspect index.js\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或者")]),s._v("\n$ nodemon --inspect index.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("然后想通过 VS Code 进行调试，这个时候就需要使用附加到 Node.js。通过命令面板 （⇧⌘P） 中的 "),a("code",[s._v("Debug: Attach to Node Process")]),s._v(" 命令将打开一个 Quick Pick  的菜单，其中列出了所有的 Node.js 进程。")]),s._v(" "),a("p",[a("img",{attrs:{src:e(347),alt:""}})]),s._v(" "),a("blockquote",[a("p",[s._v("没有使用 "),a("code",[s._v("--inspect")]),s._v(" 选项的 Node.js 进程也显示在这里，但是选择之后不能进行断点调试。")])]),s._v(" "),a("p",[s._v("我们选择通过 "),a("code",[s._v("--inspect")]),s._v(" 选项运行 Node.js 程序，比如上面的 PID 为 40931 进程，然后就可以调试了。")]),s._v(" "),a("p",[a("strong",[s._v("但是修改代码保存之后，nodemon 重启进程，本身的 PID 没有变化，但是 nodemon 内部使用的 Node 进程发生了变化，导致 VS Code 调试被关闭。因此这个方案不可取。")])]),s._v(" "),a("h2",{attrs:{id:"启动配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动配置"}},[s._v("#")]),s._v(" 启动配置")]),s._v(" "),a("p",[s._v("启动配置是在 VS Code 中设置调试的传统方式，可以为您提供运行复杂应用程序的配置选项。")]),s._v(" "),a("p",[s._v("在上一篇文章 "),a("RouterLink",{attrs:{to:"/2024/09/17/nodejs-api/#vs-code-调试-node-js"}},[s._v("创建 Node.js 服务")]),s._v(" 中，我们介绍了怎么创建启动配置，但是只配置了 "),a("code",[s._v("Node.js: 启动程序")]),s._v("，其实 VS Code 还有很多的配置选项。")],1),s._v(" "),a("p",[a("img",{attrs:{src:e(348),alt:""}})]),s._v(" "),a("p",[s._v("这里我们只关注 "),a("code",[s._v("Node.js")]),s._v(" 调试器")]),s._v(" "),a("h3",{attrs:{id:"node-js-启动程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-启动程序"}},[s._v("#")]),s._v(" "),a("code",[s._v("Node.js: 启动程序")])]),s._v(" "),a("p",[s._v("在调试模式下启动 Node.js 程序。默认配置如下：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Launch Program"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${workspaceFolder}/index.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"request"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"launch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"skipFiles"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<node_internals>/**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("配置项参数：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("request")]),s._v("："),a("code",[s._v("launch")]),s._v(" 或者 "),a("code",[s._v("attach")]),s._v("，"),a("code",[s._v("launch")]),s._v(" 表示从 VS Code 启动程序，"),a("code",[s._v("attach")]),s._v(" 表示附加已经从别的应用启动的程序，例如上面介绍的 “"),a("a",{attrs:{href:"#%E9%99%84%E5%8A%A0%E5%88%B0-node-js"}},[s._v("附加到 Node.js")]),s._v("”")]),s._v(" "),a("li",[a("code",[s._v("type")]),s._v("：调试器，VC Code 内置了 Node.js 的调试器 "),a("code",[s._v("node")]),s._v("，别的语言的调试器可能需要安装相应的扩展")]),s._v(" "),a("li",[a("code",[s._v("name")]),s._v("：配置项的名称")]),s._v(" "),a("li",[a("code",[s._v("program")]),s._v("：启动调试器时要运行的文件，"),a("code",[s._v("${workspaceFolder}")]),s._v(" 表示项目根目录，关于变量的更多详情，请参考 "),a("a",{attrs:{href:"https://code.visualstudio.com/docs/editor/variables-reference",target:"_blank",rel:"noopener noreferrer"}},[s._v("Variables Reference"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("code",[s._v("skipFiles")]),s._v("：表示调试要跳过哪些文件，"),a("code",[s._v("<node_internals>")]),s._v(" 表示 Node.js 的内置核心模块")])]),s._v(" "),a("p",[s._v("此外我们还可以添加其它配置选项，如：")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("runtimeExecutable")]),s._v("：运行时可执行文件的绝对路径，默认是 "),a("code",[s._v("node")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("runtimeArgs")]),s._v("：运行时可执行文件的可选参数，比如要运行 "),a("code",[s._v("node --inspect")]),s._v("，"),a("code",[s._v("runtimeArgs")]),s._v(" 设置为 "),a("code",[s._v('["--inspect"]')])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("args")]),s._v("：运行程序的参数，就是我们自己写的程序需要的参数")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("restart")]),s._v("：终止时是否重新启动连接，默认为 "),a("code",[s._v("false")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("cwd")]),s._v("：启动程序所在的目录")])])]),s._v(" "),a("p",[s._v("关于配置项的完整列表，请参考 "),a("a",{attrs:{href:"https://github.com/microsoft/vscode-js-debug/blob/main/OPTIONS.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("VS Code 启动配置参数"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("strong",[s._v("我们可以将 "),a("code",[s._v("runtimeExecutable")]),s._v(" 设置为 "),a("code",[s._v("nodemon")]),s._v("，从而实现开启 VS Code 调试，同时修改代码之后重启服务")])]),s._v(" "),a("div",{staticClass:"language-diff line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-diff"}},[a("code",[s._v("{\n"),a("span",{pre:!0,attrs:{class:"token unchanged"}},[a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v(' "name": "Launch Program",\n')]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v(' "program": "${workspaceFolder}/index.js",\n')]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v(' "request": "launch",\n')]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v(' "skipFiles": ["<node_internals>/**"],\n')]),a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[s._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v(' "type": "node",\n')])]),a("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[a("span",{pre:!0,attrs:{class:"token prefix inserted"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token line"}},[s._v(' "runtimeExecutable": "nodemon"\n')])]),s._v("}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"node-js-nodemon-安装程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-nodemon-安装程序"}},[s._v("#")]),s._v(" "),a("code",[s._v("Node.js: Nodemon 安装程序")])]),s._v(" "),a("p",[s._v("使用 "),a("code",[s._v("nodemon")]),s._v(" 在代码发生更改时自动重新启动调试会话，默认配置如下：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"console"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"integratedTerminal"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"internalConsoleOptions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"neverOpen"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nodemon"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"program"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${workspaceFolder}/index.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"request"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"launch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"restart"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"runtimeExecutable"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nodemon"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"skipFiles"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<node_internals>/**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("这里新增了几个选项参数：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("console")]),s._v("：启动程序的控制台，默认是 "),a("code",[s._v("internalConsole")]),s._v(" - VS Code 默认的调试控制台。"),a("code",[s._v("integratedTerminal")]),s._v(" - VS Code 的集成控制台。"),a("code",[s._v("externalTerminal")]),s._v(" - 外部控制台，当选择 "),a("code",[s._v("externalTerminal")]),s._v(" 可以配置要选择的外部终端")])]),s._v(" "),a("p",[s._v("​\t"),a("img",{attrs:{src:e(349),alt:""}})]),s._v(" "),a("ul",[a("li",[a("code",[s._v("internalConsoleOptions")]),s._v("：VS Code 默认的调试控制台是否打开，因为启动程序的控制台选择的是 VS Code 的集成控制台，所以这里不需要打开 "),a("code",[s._v("neverOpen")])])]),s._v(" "),a("p",[s._v("这个跟我们前面修改的 "),a("code",[s._v("Node.js: 启动程序")]),s._v(" 类似，只是添加了"),a("code",[s._v("console")]),s._v("、"),a("code",[s._v("internalConsoleOptions")]),s._v(" 和 "),a("code",[s._v("restart")]),s._v("，所以它也实现了开启 VS Code 调试，同时修改代码之后重启服务。")]),s._v(" "),a("h3",{attrs:{id:"node-js-通过-npm-启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-通过-npm-启动"}},[s._v("#")]),s._v(" "),a("code",[s._v("Node.js: 通过 npm 启动")])]),s._v(" "),a("p",[s._v("通过 NPM Script 启动 Node.js 程序。默认配置如下：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Launch via NPM"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"request"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"launch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"runtimeArgs"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"run-script"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"debug"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"runtimeExecutable"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"skipFiles"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<node_internals>/**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("调试时，我们可以通过调试控制台查看调试信息")]),s._v(" "),a("p",[a("img",{attrs:{src:e(350),alt:""}})]),s._v(" "),a("p",[s._v("我们可以看到，其实就是执行了 "),a("code",[s._v("npm run-script dev")]),s._v("。")]),s._v(" "),a("p",[s._v("我们通过在 "),a("code",[s._v("package.json")]),s._v(" 里配置")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nodemon index.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("可以实现开启 VS Code 调试，同时修改代码之后重启服务")]),s._v(" "),a("h3",{attrs:{id:"node-js-附加"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-附加"}},[s._v("#")]),s._v(" "),a("code",[s._v("Node.js: 附加")])]),s._v(" "),a("p",[s._v("附加到本地运行的 Node.js 程序的调试端口。")]),s._v(" "),a("p",[s._v("确保 Node.js 要调试的程序已在调试模式下启动，并且使用的调试端口与代码段中指定的端口相同，即使用 "),a("code",[s._v("--inspect")]),s._v(" 选项运行 Node.js")]),s._v(" "),a("p",[s._v("默认配置如下：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Attach"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9229")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"request"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"attach"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"skipFiles"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<node_internals>/**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("port")]),s._v(": 要使用的调试端口，"),a("code",[s._v("node --inspect index.js")]),s._v(" 默认端口号是 "),a("code",[s._v("9229")])])]),s._v(" "),a("p",[s._v("首先运行 "),a("code",[s._v("nodemon --inspect index.js")]),s._v("，然后启动 "),a("code",[s._v("Attach")]),s._v("，VS Code 就会自动连接上启动的进程，并打开调试。")]),s._v(" "),a("p",[s._v("和 “"),a("a",{attrs:{href:"#%E9%99%84%E5%8A%A0%E5%88%B0-node-js"}},[s._v("附加到 Node.js")]),s._v("” 一样，修改代码保存之后，nodemon 重启进程，本身的 PID 没有变化，但是 nodemon 内部使用的 Node 进程发生了变化，导致 VS Code 调试被关闭。")]),s._v(" "),a("p",[a("strong",[s._v("但是通过设置 "),a("code",[s._v("restart")]),s._v(" 为 "),a("code",[s._v("true")]),s._v("，可以重新启动连接，从而实现开启 VS Code 调试，同时修改代码之后重启服务")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Attach"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9229")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"request"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"attach"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"skipFiles"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<node_internals>/**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"restart"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"node-js-附加到进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-附加到进程"}},[s._v("#")]),s._v(" "),a("code",[s._v("Node.js: 附加到进程")])]),s._v(" "),a("p",[s._v("和 "),a("code",[s._v("Node.js: 附加")]),s._v(" 功能一样，不同的是 "),a("code",[s._v("Node.js: 附加")]),s._v(" 通过端口，而 "),a("code",[s._v("Node.js: 附加到进程")]),s._v(" 通过进程 ID。默认配置如下：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Attach by Process ID"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"processId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${command:PickProcess}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"request"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"attach"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"skipFiles"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<node_internals>/**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("processId")]),s._v(": Node.js 运行进程 ID。"),a("code",[s._v("${command:PickProcess}")]),s._v(" 让你选择一个进程")])]),s._v(" "),a("p",[s._v("和 “"),a("a",{attrs:{href:"#%E9%99%84%E5%8A%A0%E5%88%B0-node-js"}},[s._v("附加到 Node.js")]),s._v("” 一样，修改代码保存之后，nodemon 重启进程，本身的 PID 没有变化，但是 nodemon 内部使用的 Node 进程发生了变化，导致 VS Code 调试被关闭。")]),s._v(" "),a("p",[a("strong",[s._v("但是同样通过设置 "),a("code",[s._v("restart")]),s._v(" 为 "),a("code",[s._v("true")]),s._v("，可以重新启动连接，从而实现开启 VS Code 调试，同时修改代码之后重启服务")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Attach by Process ID"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"processId"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${command:PickProcess}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"request"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"attach"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"skipFiles"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<node_internals>/**"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"restart"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("这篇文章讲解了 VS Code 调试 Node.js 有四种方法，同时搭配 "),a("code",[s._v("nodemon")]),s._v(" 工具，实现既能打开调试，又能修改代码重启服务。现在总结一下：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("span",{staticStyle:{display:"inline-block",width:"140px"}},[s._v("方法")])]),s._v(" "),a("th",[a("span",{staticStyle:{display:"inline-block",width:"70px"}},[s._v("能否实现")])]),s._v(" "),a("th",[s._v("是否推荐")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("自动附加")]),s._v(" "),a("td",[s._v("能")]),s._v(" "),a("td",[a("code",[s._v("always")]),s._v(" 和 "),a("code",[s._v("smart")]),s._v(" 可能会影响别的项目， "),a("code",[s._v("onlyWithFlag")]),s._v(" 需要添加 "),a("code",[s._v("--inspect")]),s._v(" 选项，不是很推荐")])]),s._v(" "),a("tr",[a("td",[s._v("JavaScript 调试终端")]),s._v(" "),a("td",[s._v("能")]),s._v(" "),a("td",[s._v("推荐，很方便")])]),s._v(" "),a("tr",[a("td",[s._v("附加到 Node.js")]),s._v(" "),a("td",[s._v("不能")]),s._v(" "),a("td",[s._v("重启服务之后不能继续调试，因此不推荐")])]),s._v(" "),a("tr",[a("td",[s._v("启动配置")]),s._v(" "),a("td",[s._v("能")]),s._v(" "),a("td",[s._v("推荐使用 "),a("code",[s._v("Node.js: Nodemon 安装程序")]),s._v(" 配置")])])])]),s._v(" "),a("h2",{attrs:{id:"references"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[s._v("#")]),s._v(" References")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://code.visualstudio.com/docs/nodejs/nodejs-debugging",target:"_blank",rel:"noopener noreferrer"}},[s._v("Node.js debugging in VS Code"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://code.visualstudio.com/docs/editor/debugging",target:"_blank",rel:"noopener noreferrer"}},[s._v("Debugging"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/microsoft/vscode-js-debug/blob/main/OPTIONS.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("VS Code 启动配置参数"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://code.visualstudio.com/docs/editor/variables-reference",target:"_blank",rel:"noopener noreferrer"}},[s._v("Variables Reference"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://code.visualstudio.com/docs/editor/glob-patterns",target:"_blank",rel:"noopener noreferrer"}},[s._v("Glob Patterns Reference"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/remy/nodemon",target:"_blank",rel:"noopener noreferrer"}},[a("code",[s._v("remy/nodemon")]),a("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=n.exports}}]);