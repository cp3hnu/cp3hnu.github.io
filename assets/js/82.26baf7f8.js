(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{485:function(s,a,e){"use strict";e.r(a);var t=e(4),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"ios-使用-c-代码库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ios-使用-c-代码库"}},[s._v("#")]),s._v(" iOS 使用 C++ 代码库")]),s._v(" "),e("p",[s._v("最近在公司接到一个活，要在 iOS 里调用一个 C++ 代码库，本篇文章对在 Mac 上编译 C++ 代码库、使用 C++ 静态库文件以及过程中遇到的问题进行记录总结。")]),s._v(" "),e("h2",{attrs:{id:"cmake-编译-c-代码库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cmake-编译-c-代码库"}},[s._v("#")]),s._v(" CMake 编译 C++ 代码库")]),s._v(" "),e("p",[s._v("首先下载 CMake，"),e("a",{attrs:{href:"https://cmake.org/download/",target:"_blank",rel:"noopener noreferrer"}},[s._v("传送门"),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("请注意这里使用的版本是 "),e("code",[s._v("cmake version 3.22.1")]),s._v("，CMake 对于 iOS 的打包是最近几个版本才支持的，之前需要自己去找 iOS 的toolchain，比如 "),e("a",{attrs:{href:"https://github.com/leetal/ios-cmake",target:"_blank",rel:"noopener noreferrer"}},[s._v("ios-cmake"),e("OutboundLink")],1),s._v("。")]),s._v(" "),e("p",[s._v("现在让我们创建一个非常简单的 C++ 代码库，这个代码库不引用其它的静态库以及动态库，代码如下：")]),s._v(" "),e("div",{staticClass:"language-c++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('//hello.h头文件\n#include<stdio.h>\nint add(int a,int b);\n\n//hello.cpp文件\n#include "hello.h"\nint add(int a, int b){\n  return a + b;\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("然后在这个两个文件的同级目录中创建一个"),e("code",[s._v("CMakeLists.txt")]),s._v("，并编写 CMake 的指令")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CMakeLists.txt")]),s._v("\ncmake_minimum_required"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("VERSION "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.22")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nproject"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hello"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nadd_library"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hello hello.cpp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\ninstall"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TARGETS hello DESTINATION lib"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("指令非常简单就是将上述程序打包成静态库。编译 iOS 静态库参考 CMake "),e("a",{attrs:{href:"https://cmake.org/cmake/help/v3.22/manual/cmake-toolchains.7.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),e("OutboundLink")],1),s._v("。")]),s._v(" "),e("p",[s._v("然后运行下面的命令，在 "),e("code",[s._v("_builds")]),s._v(" 目录下生成了一个 Xcode 工程")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("cmake -S. -B_builds -GXcode "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -DCMAKE_SYSTEM_NAME"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("iOS "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-DCMAKE_OSX_ARCHITECTURES=armv7;armv7s;arm64;i386;x86_64"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -DCMAKE_OSX_DEPLOYMENT_TARGET"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -DCMAKE_INSTALL_PREFIX"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("/_install "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -DCMAKE_XCODE_ATTRIBUTE_ONLY_ACTIVE_ARCH"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NO "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -DCMAKE_IOS_INSTALL_COMBINED"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("YES\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("最后运行下面的命令生成静态库文件")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("cmake --build _builds --config Release --target "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("但是，得到了下面的错误")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("error: unable to attach DB: error: accessing build database "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/Users/XXX/Documents/demo/cpp/_builds/build/XCBuildData/build.db"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" database is locked Possibly there are two concurrent builds running "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the same filesystem location.\n** BUILD FAILED **\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("em",[s._v("人生之路难以一帆风顺，必然布满荆棘充满坎坷。")])]),s._v(" "),e("p",[s._v("查查出了什么问题，幸好已经有人发布 "),e("a",{attrs:{href:"https://gitlab.kitware.com/cmake/cmake/-/issues/21282",target:"_blank",rel:"noopener noreferrer"}},[s._v("issue"),e("OutboundLink")],1),s._v("了。")]),s._v(" "),e("p",[s._v("原来是 Xcode 的 "),e("code",[s._v("new build system")]),s._v(" 惹的祸，拉到最下面看一下解决方案")]),s._v(" "),e("blockquote",[e("p",[s._v("With the Xcode new build system limitations, we can no longer support "),e("code",[s._v("IOS_INSTALL_COMBINED")]),s._v(" through building the "),e("code",[s._v("install")]),s._v(" or "),e("code",[s._v("package")]),s._v(" targets when using that build system. Adding the ability to invoke these through the command line "),e("code",[s._v("cmake --install")]),s._v(" or "),e("code",[s._v("cpack")]),s._v(" instead will be the documented way forward.")])]),s._v(" "),e("p",[s._v("根据上面所讲的，首先我们删除 "),e("code",[s._v("-DCMAKE_IOS_INSTALL_COMBINED=YES")])]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("cmake -S. -B_builds -GXcode "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -DCMAKE_SYSTEM_NAME"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("iOS "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-DCMAKE_OSX_ARCHITECTURES=armv7;armv7s;arm64;i386;x86_64"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -DCMAKE_OSX_DEPLOYMENT_TARGET"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -DCMAKE_INSTALL_PREFIX"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("/_install "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -DCMAKE_XCODE_ATTRIBUTE_ONLY_ACTIVE_ARCH"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("NO\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("然后分别生成真机和模拟器的静态库文件")]),s._v(" "),e("ol",[e("li",[s._v("生成真机静态库文件")])]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("cmake --build _builds --config Release --target "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\n// lipo\nlipo -info _builds/Release-iphoneos/libhello.a\nArchitectures "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the fat file: libhello.a are: armv7 armv7s arm64\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("ol",{attrs:{start:"2"}},[e("li",[s._v("生成模拟器的静态库文件")])]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("cmake --build _builds --config Release --target "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -- -sdk iphonesimulator\n\n// lipo\nlipo -info _builds/Release-iphonesimulator/libhello.a\nArchitectures "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the fat file: libhello.a are: arm64 i386 x86_64\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("因为 M1 芯片的 MacBook 是使用 ARM 架构，所以现在 Xcode12 生成模拟器的静态库文件包含 "),e("code",[s._v("arm64")]),s._v("，但是此 "),e("code",[s._v("arm64")]),s._v(" 又和真机静态库文件的  "),e("code",[s._v("arm64")]),s._v("  不同。所以不能使用 "),e("code",[s._v("lipo -create")]),s._v(" 合并真机和模拟器的静态库文件，生成一个真机和模拟器都能使用的静态库文件。")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("lipo -create Release-iphoneos/libhello.a Release-iphonesimulator/libhello.a -output ./libhello.a\n\n// fatal error: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". have the same architectures "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arm64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" and can't be "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" the same fat output "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("目前只能单独使用，或者移除 "),e("code",[s._v("Release-iphonesimulator/libhello.a")]),s._v(" 的 "),e("code",[s._v("arm64")]),s._v("，再合并。但是那样还是不能在 M1 芯片的 MacBook 同时用于真机和模拟器。")]),s._v(" "),e("h2",{attrs:{id:"使用-c-静态库文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-c-静态库文件"}},[s._v("#")]),s._v(" 使用 C++ 静态库文件")]),s._v(" "),e("h3",{attrs:{id:"objective-c-使用-c-静态库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#objective-c-使用-c-静态库"}},[s._v("#")]),s._v(" Objective-C 使用 C++ 静态库")]),s._v(" "),e("p",[s._v("这个很简单，Objective-C 支持调用 C++ 的代码，但是"),e("strong",[s._v("要把 .m 文件改成 .mm 文件")]),s._v("。")]),s._v(" "),e("p",[s._v("然后引入头文件 "),e("code",[s._v("hello.h")]),s._v(" 和静态库文件 "),e("code",[s._v("libhello.a")]),s._v(" 就可以了")]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('#import "hello.h"\n\n@implementation ViewController\n- (void)viewDidLoad {\n    [super viewDidLoad];\n    int a = add(1,2);\n    NSLog(@"a= %d",a);   \n}\n@end\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"todo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#todo"}},[s._v("#")]),s._v(" TODO")]),s._v(" "),e("p",[s._v("有时间再来研究一下 "),e("code",[s._v("CMakeLists.txt")]),s._v(" 的写法和 "),e("code",[s._v("cmake")]),s._v(" 各个命令行参数以及 Aggregate Target 的使用。")])])}),[],!1,null,null,null);a.default=n.exports}}]);