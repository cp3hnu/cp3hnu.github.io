(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{427:function(a,e,t){a.exports=t.p+"assets/img/408-1.fba0d154.png"},572:function(a,e,t){"use strict";t.r(e);var s=t(4),o=Object(s.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"_408-adopting-swift-packages-in-xcode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_408-adopting-swift-packages-in-xcode"}},[a._v("#")]),a._v(" 408-Adopting Swift Packages in Xcode")]),a._v(" "),s("h2",{attrs:{id:"overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[a._v("#")]),a._v(" Overview")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#using-an-open-source-package"}},[a._v("Using an open source package")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#a-closer-look-at-packages"}},[a._v("A closer look at packages")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#package-resolution-in-more-detail"}},[a._v("Package resolution in more detail")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#updating-packages"}},[a._v("Updating packages")])]),a._v(" "),s("li",[s("a",{attrs:{href:"#resolving-package-conflicts"}},[a._v("Resolving package conflicts")])])]),a._v(" "),s("h2",{attrs:{id:"using-an-open-source-package"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-an-open-source-package"}},[a._v("#")]),a._v(" Using an open source package")]),a._v(" "),s("p",[a._v("File -> Swift Packages -> Add Package Dependency")]),a._v(" "),s("p",[a._v("你使用 package manager 管理你的 package 版本, 并遵循 "),s("a",{attrs:{href:"https://semver.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Semantic Versioning"),s("OutboundLink")],1),a._v(" 里的策略。")]),a._v(" "),s("p",[a._v("Xcode has created a directory called SwiftPM, that's for the Swift Package Manager, underneath the shared data, underneath the workspace.")]),a._v(" "),s("p",[a._v("Xcode stores information about the package versions that resolved. And you want to check that in so that everybody on your team gets the same versions.")]),a._v(" "),s("h2",{attrs:{id:"a-closer-look-at-packages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#a-closer-look-at-packages"}},[a._v("#")]),a._v(" A closer look at packages")]),a._v(" "),s("p",[a._v("The Package is a directory that contains a Swift Package manifest. The manifest is a file called Package.swift, and it identifies that directory as a Swift Package.")]),a._v(" "),s("p",[s("img",{attrs:{src:t(427),alt:""}})]),a._v(" "),s("h2",{attrs:{id:"package-resolution-in-more-detail"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#package-resolution-in-more-detail"}},[a._v("#")]),a._v(" Package resolution in more detail")]),a._v(" "),s("p",[a._v("Package resolution is the process that Xcode selects the versions of packages to use inside of your workspace.")]),a._v(" "),s("p",[a._v("Xcode 帮助你找到正确的版本的 package。")]),a._v(" "),s("p",[a._v("不要直接 import 间接依赖的 package，因为直接依赖的 package 可能随时不依赖这个 package。要想使用这个间接依赖的 package，在工程中创建一个直接依赖。")]),a._v(" "),s("h2",{attrs:{id:"updating-packages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updating-packages"}},[a._v("#")]),a._v(" Updating packages")]),a._v(" "),s("p",[a._v("File -> Swift Packages -> Update to Latest Package Versions.")]),a._v(" "),s("p",[a._v("It updates package.resolved file and Xcode will pull down the new versions for you.")]),a._v(" "),s("p",[a._v("package.resolved records version information about all the packages inside of your workspace. This file is typically shared with your team and source control.")]),a._v(" "),s("p",[a._v("package.resolved is at xxx.xcodeproj/project.xcworkspace/xcshareddata/swiftpm")]),a._v(" "),s("h2",{attrs:{id:"resolving-package-conflicts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resolving-package-conflicts"}},[a._v("#")]),a._v(" Resolving package conflicts")]),a._v(" "),s("p",[a._v("In SwiftPMs integration into Xcode, you can only have one version of a package in a workspace.")])])}),[],!1,null,null,null);e.default=o.exports}}]);